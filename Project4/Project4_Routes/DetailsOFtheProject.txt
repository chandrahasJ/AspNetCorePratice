1) Routing -> '
	a) We must add default route in startup class inside configure method
			app.UseMVC(routes => {
				routes.MapRoute(name : "default", template : "{controller=Home}/{action=Index}/{id?}");
			});

			The Above Code implies that If any other routes are not avaiable this default route is like
			a saftey net 
			That means we need to have Home Controller , Action as Index & ID is Optional
	b) We can also specify Routing on Action Method by Route Attributes	  - I Didn't understand this 
		[Route("")]
		[Route("~/")] 
		[Route("index")] 
		public IActionViewResult Index()
		{
			return View();
		}		
		Below asp-controller & asp-action generates href links
		<a asp-controller=""  asp-action="">Controller & Action Blank </a>			->  href="/"
		<a href="~/">Normal href</a> 												->  href="/"
		<a asp-controller="demo" asp-action="">Index Blank</a>						->  href="/demo"
		<a asp-controller="demo" asp-action="index">Controller & Action</a>			->  href="/demo"
    <a asp-controller="demo" asp-action="Demo2">Go Demo 2 View</a>
2) We have two types to speficy routing one using tags such as 
	a) asp-controller : In asp-controller we must add Controller Name
	b) asp-action : In asp-action we must add Action Name
	NOTE : @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers  
	NOTE : Make sure it is case-sensitive
	we need to add _ViewsImport.cshtml file in View Folder using Add Item -> MVC View Import Page 
3) ActionLink -> We can use it as shown Below
   @Html.ActionLink("<Display Text>","<ACTION>","<CONTROLLER>")
4) I need to learn more about Routing... 


